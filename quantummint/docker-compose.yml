version: '3.8'

services:
  # Database Services
  mongodb:
    image: mongo:6.0
    container_name: quantummint-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-quantummint}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - quantummint-network

  redis:
    image: redis:7-alpine
    container_name: quantummint-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis123}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - quantummint-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: quantummint-rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-admin}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-password123}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - quantummint-network

  # Backend Services
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: quantummint-api-gateway
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3000
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      AUTH_SERVICE_URL: http://auth-service:3001
      MONEY_GENERATION_SERVICE_URL: http://money-generation:3002
      TRANSACTION_SERVICE_URL: http://transaction-service:3003
      PAYMENT_INTEGRATION_SERVICE_URL: http://payment-integration:3004
      KYC_SERVICE_URL: http://kyc-service:3005
      DOMAIN_CONTROLLER_URL: http://domain-controller:8080
      MAIL_SERVER_URL: http://mail-server:3006
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      LOG_LEVEL: ${LOG_LEVEL:-info}
    depends_on:
      - redis
      - auth-service
      - money-generation
      - transaction-service
      - payment-integration
      - kyc-service
      - domain-controller
      - mail-server
    networks:
      - quantummint-network

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: quantummint-auth-service
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3001
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/${MONGO_DATABASE:-quantummint}?authSource=admin
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-7d}
      BCRYPT_ROUNDS: ${BCRYPT_ROUNDS:-12}
      EMAIL_SERVICE: ${EMAIL_SERVICE:-gmail}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT:-587}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      LOG_LEVEL: ${LOG_LEVEL:-info}
    depends_on:
      - mongodb
      - redis
    networks:
      - quantummint-network

  money-generation:
    build:
      context: ./money-generation
      dockerfile: Dockerfile
    container_name: quantummint-money-generation
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3002
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/${MONGO_DATABASE:-quantummint}?authSource=admin
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      RABBITMQ_URL: amqp://${RABBITMQ_USER:-admin}:${RABBITMQ_PASSWORD:-password123}@rabbitmq:5672
      TRANSACTION_SERVICE_URL: http://transaction-service:3003
      LOG_LEVEL: ${LOG_LEVEL:-info}
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - quantummint-network

  transaction-service:
    build:
      context: ./transaction-service
      dockerfile: Dockerfile
    container_name: quantummint-transaction-service
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3003
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/${MONGO_DATABASE:-quantummint}?authSource=admin
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      RABBITMQ_URL: amqp://${RABBITMQ_USER:-admin}:${RABBITMQ_PASSWORD:-password123}@rabbitmq:5672
      LOG_LEVEL: ${LOG_LEVEL:-info}
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - quantummint-network

  payment-integration:
    build:
      context: ./payment-integration
      dockerfile: Dockerfile
    container_name: quantummint-payment-integration
    restart: unless-stopped
    ports:
      - "3004:3004"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3004
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/${MONGO_DATABASE:-quantummint}?authSource=admin
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      RABBITMQ_URL: amqp://${RABBITMQ_USER:-admin}:${RABBITMQ_PASSWORD:-password123}@rabbitmq:5672
      TRANSACTION_SERVICE_URL: http://transaction-service:3003
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      ORANGE_MONEY_API_KEY: ${ORANGE_MONEY_API_KEY}
      ORANGE_MONEY_SECRET: ${ORANGE_MONEY_SECRET}
      AFRIMONEY_API_KEY: ${AFRIMONEY_API_KEY}
      AFRIMONEY_SECRET: ${AFRIMONEY_SECRET}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - quantummint-network

  kyc-service:
    build:
      context: ./kyc-service
      dockerfile: Dockerfile
    container_name: quantummint-kyc-service
    restart: unless-stopped
    ports:
      - "3005:3005"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 3005
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/${MONGO_DATABASE:-quantummint}?authSource=admin
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      RABBITMQ_URL: amqp://${RABBITMQ_USER:-admin}:${RABBITMQ_PASSWORD:-password123}@rabbitmq:5672
      FILE_UPLOAD_PATH: ${FILE_UPLOAD_PATH:-/app/uploads}
      MAX_FILE_SIZE: ${MAX_FILE_SIZE:-10485760}
      ALLOWED_FILE_TYPES: ${ALLOWED_FILE_TYPES:-jpg,jpeg,png,pdf}
      SANCTIONS_API_URL: ${SANCTIONS_API_URL}
      PEP_API_URL: ${PEP_API_URL}
      ADVERSE_MEDIA_API_URL: ${ADVERSE_MEDIA_API_URL}
      WATCHLIST_API_URL: ${WATCHLIST_API_URL}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    volumes:
      - kyc_uploads:/app/uploads
    depends_on:
      - mongodb
      - redis
      - rabbitmq
    networks:
      - quantummint-network

  domain-controller:
    build:
      context: ./domain-controller
      dockerfile: Dockerfile
    container_name: quantummint-domain-controller
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "389:389"
      - "636:636"
      - "88:88"
      - "53:53"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      WEB_PORT: 8080
      DOMAIN_NAME: ${DOMAIN_NAME:-quantummint.local}
      NETBIOS_NAME: ${NETBIOS_NAME:-QUANTUMMINT}
      LDAP_PORT: 389
      LDAPS_PORT: 636
      LDAP_BASE_DN: ${LDAP_BASE_DN:-dc=quantummint,dc=local}
      KERBEROS_REALM: ${KERBEROS_REALM:-QUANTUMMINT.LOCAL}
      KDC_PORT: 88
      DNS_PORT: 53
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/${MONGO_DATABASE:-quantummint}?authSource=admin
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      JWT_SECRET: ${JWT_SECRET}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      QUANTUMMINT_API_GATEWAY: http://api-gateway:3000
      QUANTUMMINT_AUTH_SERVICE: http://auth-service:3001
      QUANTUMMINT_MAIL_SERVER: http://mail-server:3006
    depends_on:
      - mongodb
      - redis
    networks:
      - quantummint-network

  mail-server:
    build:
      context: ./mail-server
      dockerfile: Dockerfile
    container_name: quantummint-mail-server
    restart: unless-stopped
    ports:
      - "3006:3006"
      - "25:25"
      - "587:587"
      - "465:465"
      - "143:143"
      - "993:993"
      - "110:110"
      - "995:995"
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      WEB_PORT: 3006
      MAIL_HOSTNAME: ${MAIL_HOSTNAME:-mail.quantummint.com}
      SMTP_PORT: 25
      SMTP_SUBMISSION_PORT: 587
      SMTP_SECURE_PORT: 465
      IMAP_PORT: 143
      IMAP_SECURE_PORT: 993
      POP3_PORT: 110
      POP3_SECURE_PORT: 995
      MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/${MONGO_DATABASE:-quantummint}?authSource=admin
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      LOG_LEVEL: ${LOG_LEVEL:-info}
      DOMAIN_CONTROLLER_URL: http://domain-controller:8080
      API_GATEWAY_URL: http://api-gateway:3000
    depends_on:
      - mongodb
      - redis
      - domain-controller
    networks:
      - quantummint-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: quantummint-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:3000}
      REACT_APP_ENVIRONMENT: ${NODE_ENV:-development}
    depends_on:
      - api-gateway
    networks:
      - quantummint-network

volumes:
  mongodb_data:
  redis_data:
  rabbitmq_data:
  kyc_uploads:

networks:
  quantummint-network:
    driver: bridge
