{
  "name": "quantummint",
  "version": "1.0.0",
  "description": "QuantumMint Digital Money Generation Platform",
  "main": "index.js",
  "scripts": {
    "install:all": "npm run install:shared && npm run install:services && npm run install:frontend",
    "install:shared": "cd shared && npm install",
    "install:services": "cd api-gateway && npm install && cd ../auth-service && npm install && cd ../money-generation && npm install && cd ../transaction-service && npm install && cd ../payment-integration && npm install && cd ../kyc-service && npm install && cd ../domain-controller && npm install && cd ../mail-server && npm install",
    "install:frontend": "cd frontend && npm install",
    "start": "docker-compose up -d",
    "start:dev": "docker-compose -f docker-compose.yml -f docker-compose.dev.yml up -d",
    "stop": "docker-compose down",
    "logs": "docker-compose logs -f",
    "build": "docker-compose build",
    "clean": "docker-compose down --volumes --remove-orphans",
    "backup": "./scripts/backup.sh",
    "deploy": "./scripts/deploy.sh",
    "dev": "npm run start:dev",
    "test": "npm run test:services && npm run test:frontend",
    "test:services": "cd api-gateway && npm test && cd ../auth-service && npm test && cd ../transaction-service && npm test && cd ../payment-integration && npm test && cd ../kyc-service && npm test && cd ../domain-controller && npm test && cd ../mail-server && npm test",
    "test:frontend": "cd frontend && npm test -- --watchAll=false",
    "test:watch": "concurrently \"cd api-gateway && npm run test:watch\" \"cd auth-service && npm run test:watch\" \"cd transaction-service && npm run test:watch\"",
    "test:coverage": "npm run test:services:coverage && npm run test:frontend:coverage",
    "test:services:coverage": "cd api-gateway && npm run test:coverage && cd ../auth-service && npm run test:coverage && cd ../transaction-service && npm run test:coverage && cd ../payment-integration && npm run test:coverage && cd ../kyc-service && npm run test:coverage && cd ../domain-controller && npm run test:coverage && cd ../mail-server && npm run test:coverage",
    "test:frontend:coverage": "cd frontend && npm test -- --coverage --watchAll=false",
    "lint": "npm run lint:services && npm run lint:frontend",
    "lint:services": "cd api-gateway && npm run lint && cd ../auth-service && npm run lint && cd ../transaction-service && npm run lint && cd ../payment-integration && npm run lint && cd ../kyc-service && npm run lint && cd ../domain-controller && npm run lint && cd ../mail-server && npm run lint",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:fix": "npm run lint:services:fix && npm run lint:frontend:fix",
    "lint:services:fix": "cd api-gateway && npm run lint:fix && cd ../auth-service && npm run lint:fix && cd ../transaction-service && npm run lint:fix && cd ../payment-integration && npm run lint:fix && cd ../kyc-service && npm run lint:fix && cd ../domain-controller && npm run lint:fix && cd ../mail-server && npm run lint:fix",
    "lint:frontend:fix": "cd frontend && npm run lint:fix",
    "test:all": "node scripts/test-all.js",
    "lint:all": "node scripts/lint-all.js",
    "test:all:coverage": "node scripts/test-all.js --coverage",
    "lint:all:fix": "node scripts/lint-all.js --fix",
    "ci": "npm run lint:all && npm run test:all",
    "precommit": "npm run lint:all:fix && npm run test:all"
  },
  "keywords": [
    "digital-money",
    "fintech",
    "microservices",
    "blockchain",
    "payment"
  ],
  "author": "NinjaTech AI",
  "license": "MIT",
  "devDependencies": {
    "concurrently": "^8.2.2"
  }
}
